@include option("grid") {
    [class*="#{class("Grid")}"] {
    	display: grid;
    	grid-auto-flow: row;
    	grid-auto-columns: 1fr;
    	grid-template-columns: none;

    	@include respond-to($grid-min-breakpoint, "up") {
    		grid-auto-flow: dense;

    		@for $i from 2 through $grid-max-cols {
    			&[class*="-#{$i}"] {
    				grid-template-columns: repeat(#{$i}, 1fr);
    			}

                [class*="#{class("column")}-#{$i}"] {
                    grid-column: auto / span #{$i};
                }

                [class*="#{class("row")}-#{$i}"] {
                    grid-row: auto / span #{$i};
                }
    		}

    		&[class*="#{class("(Grid)-auto")}"] {
    		    grid-auto-flow: column;
    			grid-auto-columns: 1fr;
    			grid-template-columns: none;
    		}
    	}

        @include option("grid-masonry") {
            &[class*="#{class("(Grid)--masonry")}"] {
                grid-template-rows: masonry;
            }
        }
    }

    @each $name, $value in $gutters  {
        .#{class("Grid-gutter")}#{$name} {
            grid-gap: $value;
        }
    }
}

@mixin media-grid($prefix: "") {
	[class*="#{class("Grid")}"] {
		@for $i from 2 through $grid-max-cols {
			&[class*="--#{$prefix}#{$i}"] {
				grid-template-columns: repeat(#{$i}, 1fr);
			}

            [class*="#{$prefix}#{class("column")}-#{$i}"] {
                grid-column: auto / span #{$i};
            }

            [class*="#{$prefix}#{class("row")}-#{$i}"] {
                grid-row: auto / span #{$i};
            }
		}

		&[class*="#{$prefix}#{class("(Grid)-auto")}"] {
		    grid-auto-flow: column;
			grid-auto-columns: 1fr;
			grid-template-columns: none;
		}
	}
}
