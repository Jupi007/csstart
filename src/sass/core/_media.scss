@include option("responsive-utilities") {
    @each $name, $value in $breakpoints {
    	@include respond-to($name, "up") {
            @include option("utilities") {
                @include media-utilities("responsive", $name + "-");
            }

            @include utility-option("flex", "responsive") {
                @include media-flex($name + "-");
            }
            @include utility-option("grid", "responsive") {
    		    @include media-grid($name + "-");
            }
    	}
    }
}

@include option("dark-theme-utilities") {
    @media (prefers-color-scheme: dark) {
        @include option("utilities") {
            @include media-utilities("dark-theme", class("dark-theme-utilities-prefix-"));
        }

        @include utility-option("flex", "dark-theme") {
            @include media-flex(class("dark-theme-utilities-prefix-"));
        }
        @include utility-option("grid", "dark-theme") {
            @include media-grid(class("dark-theme-utilities-prefix-"));
        }
    }
}


// Media Print reset and utilities based on Gutenberg (https://github.com/BafS/Gutenberg)
@include option("print-utilities") {
    @include print {
    	*,
    	*:before,
    	*:after,
    	p:first-letter,
    	div:first-letter,
    	blockquote:first-letter,
    	li:first-letter,
    	p:first-line,
    	div:first-line,
    	blockquote:first-line,
    	li:first-line {
    		background: transparent !important;
    		box-shadow: none !important;
    		text-shadow: none !important;
    	}

    	body {
    		font-size: 12pt;
    		background: white;
    		font-smooth: always;
    		-moz-osx-font-smoothing: grayscale;
    		-webkit-font-smoothing: antialiased;
    		text-rendering: optimizeLegibility;
    	}

    	table,
    	blockquote,
    	pre,
    	code,
    	figure,
    	li,
    	hr,
    	ul,
    	ol,
    	a,
    	tr {
    		page-break-inside: avoid;
    	}

    	#{$headings},
    	p,
    	a {
    		orphans: 3;
    		widows: 3;
    	}

    	#{$headings} {
    		page-break-after: avoid;
    		page-break-inside: avoid;

    		& + p {
    			page-break-before: avoid;
    		}
    	}

    	img {
    		page-break-after: auto;
    		page-break-before: auto;
    		page-break-inside: avoid;
    	}

    	pre {
    		white-space: pre-wrap !important;
    		word-wrap: break-word;
    	}

    	a {
    		&[href^='http'],
    		&[href^='ftp'] {
    			&:after {
    				content: ' (' attr(href) ')';
    				font-size: 80%;
    			}
    		}

    		&[href$='.jpg'],
    		&[href$='.jpeg'],
    		&[href$='.gif'],
    		&[href$='.png'] {
    			&:after {
    				display: none;
    			}
    		}
    	}

    	abbr[title],
    	acronym[title] {
    		&:after {
    			content: ' (' attr(title) ')';
    		}
    	}

    	a {
    		&.#{class("print-utilities-prefix-")}#{class("(print-)no-reformat")}:after { content: ''; }
    	}

    	abbr,
    	acronym {
    		&[title] {
    			&.#{class("print-utilities-prefix-")}#{class("(print-)no-reformat")}:after { content: ''; }
    		}
    	}

    	.#{class("print-utilities-prefix-")}#{class("(print-)no-reformat")} {
    		abbr,
    		acronym,
    		a {
    			&:after { content: ''; }
    		}
    	}

    	::placeholder {
    		color: transparent;
    	}

    	.#{class("print-utilities-prefix-")} {
            &#{class("(print-)main")} {
                margin: 0!important;
                background: transparent!important;
                border: 0!important;
            }

    		&#{class("(print-)page-break")},
    		&#{class("(print-)page-break-before")} {
    			page-break-before: always!important;
    		}

    		&#{class("(print-)page-break-after")} {
    			page-break-after: always!important;
    		}
    	}

        @include option("utilities") {
            @include media-utilities("print", class("print-utilities-prefix-"));
        }

        @include utility-option("flex", "print") {
            @include media-flex(class("print-utilities-prefix-"));
        }
        @include utility-option("grid", "print") {
            @include media-grid(class("print-utilities-prefix-"));
        }
    }
}
