@function getter($map, $name) {
	@if map-has-key($map, $name) {
		@return(map-get($map, $name));
	}
	@else {
		@warn "Unfortunately, `#{$name}` value couldn't be retrieved from `#{$map}`.";
		@return null;
	}
}

@function color($name) {
    $color: getter($colors, $name);

    @if type-of($color) != color and $color != null {
        $color: color($color);
    }

	@return $color;
}

@function font-weight($name) {
	@return getter($font-weights, $name);
}

@function spacer($name, $coefficient: 1) {
    $spacer: getter($spacers, $name);

    @if $spacer != null {
        @return calc(var(--spacer-base) * #{$spacer * $coefficient});
    }

    @return $spacer;
}

@function class($name) {
    $class: getter($classes, $name);

    @if $class == null {
        @return $name;
    }

    @return $class;
}

@function grey($percentage) {
	@if $percentage >= 0 and $percentage <= 100 {
		@return(darken(#fff, $percentage));
	}
	@else {
		@warn "Unfortunately, `#{$percentage}` value is not valid. It should be between 0 and 100.";
		@return null;
	}
}

@function brightness($color) {
    @if type-of($color) != color {
        @warn "Unfortunately, `#{$color}` value is not valid. It should be a color.";
		@return null;
    }

    @return (red($color) + green($color) + blue($color)) / (255 * 3);
}

@function brightness-ratio($base, $color) {
    @if type-of($color) != color or type-of($base) != color {
        @warn "Unfortunately, one or more of the values is not valid. It should be a color.";
		@return null;
    }

    @return abs(brightness($base) - brightness($color));
}

@function best-contrast($base, $color1, $color2) {
    @if type-of($color1) != color or type-of($base) != color or type-of($color2) != color {
        @warn "Unfortunately, one or more of the values is not valid. It should be a color.";
		@return null;
    }

    @return if(brightness-ratio($base, $color1) > brightness-ratio($base, $color2), $color1, $color2);
}

@function set-brightness($color, $brightness) {
    @if type-of($color) != color {
        @warn "Unfortunately, `#{$color}` value is not valid. It should be a color.";
		@return null;
    }

    @return hsl(
        hue($color),
        saturation($color),
        $brightness
    );
}
