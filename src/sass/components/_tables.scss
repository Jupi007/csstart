// =========================
// ==== Table component ====
// =========================

// Create a Table by adding the .Table class or add the .Afb class to the parent of a table html tag

@include option("table") {

@include theme-vars(
    (--table-border-color, $table-border-color, $table-border-color-dark),
    (--table-cell-border-color, $table-cell-border-color, $table-cell-border-color-dark),
    (--table-background, $table-background, $table-background-dark),
    (--table-headings-cell-background, $table-headings-cell-background, $table-headings-cell-background-dark),
    (--table-zebra-cell-background, $table-zebra-cell-background, $table-zebra-cell-background-dark),
    (--table-cell-hover-background, $table-cell-hover-background, $table-cell-hover-background-dark),
    (--table-caption-color, $table-caption-color, $table-caption-color-dark)
);

.#{class("Table")},
.#{class("Auto-formating-block")} table
{
    --table-cell-padding: #{$table-cell-padding};

    width: 100%;
	max-width: 100%;
	table-layout: auto;
    margin-top: $table-margin-top;
    margin-bottom: $table-margin-bottom;
	border-spacing: 0px;
	border: $table-border-width solid var(--table-border-color);
    @include border-radius($table-border-radius);
    background: var(--table-background);

    // Tricky code to get border-radius on a table html tag
	@if $table-border-radius > 0 {
		border-collapse: separate;

		td, th {
			border-right: $table-border-width solid var(--table-cell-border-color);
			border-bottom: $table-border-width solid var(--table-cell-border-color);

			&:last-child {
				border-right: none;
			}
		}

		tbody tr:last-child {
			td, th {
				border-bottom: none;
			}
		}

		tfoot {
			td, th {
				border-top: $table-border-width solid var(--table-cell-border-color);
				border-bottom: none;
			}
		}
	}
    // Use less code than upper if $table-border-radius is defined to 0
	@else {
		border-collapse: collapse;

		td, th {
			border: $table-border-width solid var(--table-cell-border-color);
		}
	}

	td, th {
		padding: var(--table-cell-padding);
	}

	th {
		background: var(--table-headings-cell-background);
	}

    @include option("table-zebra") {
        tr:nth-child(even) {
    		background: var(--table-zebra-cell-background); // TODO: use pseudo elements
    	}
    }

    @include option("table-hover") {
        tbody {
            td {
                position: relative;
                z-index: 1;

                // Used to get smooth transitions with :hover
                &::after {
                    @extend %magic-pseudo-element;
                    
                    background: var(--table-cell-hover-background);

                    @include transition("opacity");
                }
            }

            tr:hover td::after {
                opacity: 1;
            }
    	}
    }

	caption {
        font-style: $table-caption-font-style;
		color: var(--table-caption-color);
	}
}

.#{class("Table")} {
    &--#{class("(Component)--fixed")} {
    	table-layout: fixed;
    }

    &--#{class("(Component)--slim")} {
    	td, th {
    		--table-cell-padding: #{$table-slim-cell-padding};
    	}
    }
}

}
