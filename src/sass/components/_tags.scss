@include option("tags") {

[class*="Tag"], a[class*="Tag"] {
    outline: 0;
	display: inline-block;
	background: var(--components-background);
	color: var(--components-color);
	border: none;
	border-radius: $tags-border-radius;
	padding: $tags-padding;
	font-size: $tags-font-size;
	line-height: 1;
	vertical-align: middle;
    text-decoration: none;

    &:hover, &:focus {
        color: var(--components-color);
        text-decoration: none;
    }

	@each $component, $bg in $components {
		&[class*="-#{$component}"] {
			background: $bg;
			color: contrast($bg, $color-base, $color-dark);

			&[class*="--inversed"] {
				background-color: transparent;
				color: $bg;
				box-shadow: 0 0 0 $buttons-inversed-border-width $bg inset;
			}
		}
	}

	&[class*="--inversed"] {
		background-color: transparent;
		color: var(--components-background);
		box-shadow: 0 0 0 $buttons-inversed-border-width var(--components-background) inset;
	}

	&[class*="--l"] {
		padding: $tags-large-padding;
		font-size: $tags-large-font-size;
	}

	&[class*="--xl"] {
		padding: $tags-extra-large-padding;
		font-size: $tags-extra-large-font-size;
	}
}

a[class*="Tag"] {
    position: relative;
    z-index: 1;
    text-decoration: none;
	color: var(--components-color);

    &::after {
        content: "";
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        background-color: var(--components-background-hover);
    	border-radius: $buttons-border-radius;
        opacity: 0;
        z-index: -1;

        @include transition("opacity");
    }

	&:hover, &:focus {
        color: var(--components-color);
        text-decoration: none;
    	outline: 0;

        &::after {
            opacity: 1;
        }
    }

	&:active {
        &::after {
            opacity: 0;
        }
    }

    &[class*="--inversed"] {
		&::after {
            background-color: var(--components-background);
        }

        &:active {
            &::after {
                opacity: .8;
            }
        }

		&:hover, &:focus {
			color: $components-color-base;
		}
	}

    @each $component, $bg, $color in $components {
		&[class*="-#{$component}"] {
			background: $bg;
			color: contrast($bg, $color-base, $color-dark);

            &::after {
                background-color: darken($bg, $components-hover-base);
            }

            &:hover, &:focus {
                color: contrast($bg, $color-base, $color-dark);
                text-decoration: none;
            }

			&[class*="--inversed"] {
				background-color: transparent;
				color: $bg;
				box-shadow: 0 0 0 $buttons-inversed-border-width $bg inset;

                &::after {
                    background-color: $bg;
                }

				&:hover, &:focus {
					color: contrast($bg, $color-base, $color-dark);
				}
			}
		}
	}
}

}
