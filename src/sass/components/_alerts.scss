@include option("alert") {

[class*="#{class("Alert")}"] {
	padding: $alert-padding;
	border: $alert-border-width solid var(--components-background);
	border-left-width: $alert-border-left-width;
	@include border-radius($alert-border-radius);
	margin-bottom: $alert-margin-bottom;
    background: var(--alert-background);
	color: var(--body-color);

    @include option("components-inverted") {
        &[class*="#{class("(Component)-inverted")}"] {
            border-color: var(--components-background-inverted);
        	color: var(--body-color-inverted);
            background: var(--alert-background-inverted);
        }
    }

    @include option("components-dark") {
        &[class*="#{class("(Component)-dark")}"] {
            border-color: $components-background-dark;
            color: $body-color-dark;
            background: $alert-background-dark;
        }
    }

    @include option("components-light") {
        &[class*="#{class("(Component)-light")}"] {
            border-color: $components-background;
        	color: $body-color;
            background: $alert-background;
        }
    }

    @include option("components-ghost") {
        &[class*="#{class("(Component)-ghost")}"] {
            border-color: transparent;
        	color: var(--body-color);
            background: transparent;
        }
    }

	@each $component, $bg in $components {
		&[class*="-#{$component}"] {
			border-color: $bg;
            background: transparentize($bg, $alert-background-transparency-amount);

            @if $bg != transparent {
                color: set-brightness($bg, $alert-color-brightness);
            }
            @include option("dark-theme") {
                @media (prefers-color-scheme: dark) {
                    @if $bg != transparent {
                        color: set-brightness($bg, $alert-color-brightness-dark);
                    }
                }
            }
		}
	}

	#{$headings} {
		font-size: $alert-title-font-size;
	}
}

}
